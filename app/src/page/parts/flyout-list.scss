@import '../../css/_basic';


.my-own-mode {
	.flyout-list-ct {
		.flyout-list {
			background-color: var(--my-own-bg-color);
			color: var(--my-own-text-color);

			.round-icon-button {
				&:not(.selected) {
					border-color: $roundIconButtonColor;
				}
			}
		}
	}
}

.flyout-list-ct {
	position: relative;
	outline: 0;

	&:disabled,
	&[disabled] {
		pointer-events: none;
		border-color: $disabledIconM;
		color: $disabledIconM;
		outline: 0;

		&>i {
			color: $disabledIconM;
			outline: 0;
		}
	}

	&>i,
	.flyout-down-arrow {
		transition: transform 200ms;
	}

	.flyout-list {
		border-radius: 24px;
		display: flex;
		flex-direction: column;
		background-color: white;
		position: absolute;
		opacity: 0;
		visibility: hidden;
		transition: opacity 200ms 400ms, visibility 200ms 400ms;
		z-index: 1;
		filter: drop-shadow(0px 63px 25px rgba(0, 0, 0, 0.01)) drop-shadow(0px 35px 21px rgba(0, 0, 0, 0.05)) drop-shadow(0px 16px 16px rgba(0, 0, 0, 0.09)) drop-shadow(0px 4px 9px rgba(0, 0, 0, 0.1)) drop-shadow(0px 0px 0px rgba(0, 0, 0, 0.1));

		.round-icon-button {
			&:not(.selected) {
				border-color: transparent;

				&:hover {
					border-color: $hoverMSolid;
				}

				&:active {
					border-color: $focusM-left;
				}
			}
		}
	}

	&:hover {
		.flyout-list {
			opacity: 1;
			visibility: visible;
			transition: opacity 200ms, visibility 200ms;
		}

		&>i,
		.flyout-down-arrow {
			transform: rotate(180deg);
		}
	}
}